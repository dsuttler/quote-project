{"ast":null,"code":"var _jsxFileName = \"/Users/devinsuttler/Documents/react_udemy_course_again/quote-project/src/pages/AllQuotes.js\",\n    _s = $RefreshSig$();\n\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../lib/api\";\nimport { useEffect } from \"react\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport NotFound from \"./NotFound\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: 'q1',\n  author: 'Devin',\n  text: 'Learning React can be fun!'\n}, {\n  id: 'q2',\n  author: 'Jay',\n  text: 'Learning Linux can be fun!'\n}];\n\nconst AllQuotes = () => {\n  _s();\n\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error\n  } = useHttp(getAllQuotes, true);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === 'pending') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'centered',\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: 'centered focused',\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\n    return /*#__PURE__*/_jsxDEV(NoQuotesFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(QuoteList, {\n    quotes: loadedQuotes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AllQuotes, \"Sn2QGCbJGjm/GjrACrT5qb4lH3A=\", false, function () {\n  return [useHttp];\n});\n\n_c = AllQuotes;\nexport default AllQuotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"sources":["/Users/devinsuttler/Documents/react_udemy_course_again/quote-project/src/pages/AllQuotes.js"],"names":["QuoteList","useHttp","getAllQuotes","useEffect","LoadingSpinner","NotFound","NoQuotesFound","DUMMY_QUOTES","id","author","text","AllQuotes","sendRequest","status","data","loadedQuotes","error","length"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,gCAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,YAAR,QAA2B,YAA3B;AACA,SAAQC,SAAR,QAAwB,OAAxB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;;AAEA,MAAMC,YAAY,GAAG,CACjB;AAACC,EAAAA,EAAE,EAAE,IAAL;AAAWC,EAAAA,MAAM,EAAE,OAAnB;AAA4BC,EAAAA,IAAI,EAAE;AAAlC,CADiB,EAEjB;AAACF,EAAAA,EAAE,EAAE,IAAL;AAAWC,EAAAA,MAAM,EAAE,KAAnB;AAA0BC,EAAAA,IAAI,EAAE;AAAhC,CAFiB,CAArB;;AAMA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM;AAACC,IAAAA,WAAD;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA,IAAI,EAAEC,YAA5B;AAA0CC,IAAAA;AAA1C,MAAmDf,OAAO,CAACC,YAAD,EAAe,IAAf,CAAhE;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,WAAW;AACd,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;;AAIA,MAAGC,MAAM,KAAK,SAAd,EAAyB;AACrB,wBACI;AAAK,MAAA,SAAS,EAAE,UAAhB;AAAA,6BACI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAED,MAAGG,KAAH,EAAU;AACN,wBAAO;AAAG,MAAA,SAAS,EAAE,kBAAd;AAAA,gBAAmCA;AAAnC;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,MAAIH,MAAM,KAAK,WAAX,KAA2B,CAACE,YAAD,IAAiBA,YAAY,CAACE,MAAb,KAAwB,CAApE,CAAJ,EAA4E;AACxE,wBAAO,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI,QAAC,SAAD;AAAW,IAAA,MAAM,EAAEF;AAAnB;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CA1BD;;GAAMJ,S;UACuDV,O;;;KADvDU,S;AA4BN,eAAeA,SAAf","sourcesContent":["import QuoteList from \"../components/quotes/QuoteList\";\nimport useHttp from \"../hooks/use-http\";\nimport {getAllQuotes} from \"../lib/api\";\nimport {useEffect} from \"react\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport NotFound from \"./NotFound\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\n\nconst DUMMY_QUOTES = [\n    {id: 'q1', author: 'Devin', text: 'Learning React can be fun!'},\n    {id: 'q2', author: 'Jay', text: 'Learning Linux can be fun!'}\n]\n\n\nconst AllQuotes = () => {\n    const {sendRequest, status, data: loadedQuotes, error} = useHttp(getAllQuotes, true)\n\n    useEffect(() => {\n        sendRequest()\n    }, [sendRequest])\n\n    if(status === 'pending') {\n        return (\n            <div className={'centered'}>\n                <LoadingSpinner />\n            </div>\n        )\n    }\n\n    if(error) {\n        return <p className={'centered focused'}>{error}</p>\n    }\n\n    if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\n        return <NoQuotesFound />\n    }\n\n    return (\n        <QuoteList quotes={loadedQuotes}/>\n    )\n}\n\nexport default AllQuotes;"]},"metadata":{},"sourceType":"module"}