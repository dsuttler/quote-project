{"ast":null,"code":"var _jsxFileName = \"/Users/devinsuttler/Documents/react_udemy_course_again/quote-project/src/components/quotes/QuoteList.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from 'react';\nimport { useHistory, useLocation, useRouteMatch } from \"react-router-dom\";\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = props => {\n  _s();\n\n  const history = useHistory();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const isSortingAscending = queryParams.get('sort') === 'asc';\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const changeSortingHandler = () => {\n    history.push(`${location.pathname}?sort=${isSortingAscending ? 'desc' : 'asc'}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.sorting,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeSortingHandler,\n        children: [\"Sort \", isSortingAscending ? 'Descending' : 'Ascending']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: sortedQuotes.map(quote => /*#__PURE__*/_jsxDEV(QuoteItem, {\n        id: quote.id,\n        author: quote.author,\n        text: quote.text\n      }, quote.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuoteList, \"azjqGSEfmvz5+G/YRUZm7OceOpI=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = QuoteList;\nexport default QuoteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteList\");","map":{"version":3,"sources":["/Users/devinsuttler/Documents/react_udemy_course_again/quote-project/src/components/quotes/QuoteList.js"],"names":["Fragment","useHistory","useLocation","useRouteMatch","QuoteItem","classes","sortQuotes","quotes","ascending","sort","quoteA","quoteB","id","QuoteList","props","history","location","queryParams","URLSearchParams","search","isSortingAscending","get","sortedQuotes","changeSortingHandler","push","pathname","sorting","list","map","quote","author","text"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,aAAlC,QAAuD,kBAAvD;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;AAEA,MAAMC,UAAU,GAAG,CAACC,MAAD,EAASC,SAAT,KAAuB;AACtC,SAAOD,MAAM,CAACE,IAAP,CAAY,CAACC,MAAD,EAASC,MAAT,KAAoB;AACnC,QAAIH,SAAJ,EAAe;AACX,aAAOE,MAAM,CAACE,EAAP,GAAYD,MAAM,CAACC,EAAnB,GAAwB,CAAxB,GAA4B,CAAC,CAApC;AACH,KAFD,MAEO;AACH,aAAOF,MAAM,CAACE,EAAP,GAAYD,MAAM,CAACC,EAAnB,GAAwB,CAAxB,GAA4B,CAAC,CAApC;AACH;AACJ,GANM,CAAP;AAOH,CARD;;AAUA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAMC,OAAO,GAAGd,UAAU,EAA1B;AACA,QAAMe,QAAQ,GAAGd,WAAW,EAA5B;AAEA,QAAMe,WAAW,GAAG,IAAIC,eAAJ,CAAoBF,QAAQ,CAACG,MAA7B,CAApB;AAEA,QAAMC,kBAAkB,GAAGH,WAAW,CAACI,GAAZ,CAAgB,MAAhB,MAA4B,KAAvD;AAEA,QAAMC,YAAY,GAAGhB,UAAU,CAACQ,KAAK,CAACP,MAAP,EAAea,kBAAf,CAA/B;;AAEA,QAAMG,oBAAoB,GAAG,MAAM;AAC/BR,IAAAA,OAAO,CAACS,IAAR,CAAc,GAAER,QAAQ,CAACS,QAAS,SAAQL,kBAAkB,GAAG,MAAH,GAAY,KAAM,EAA9E;AAEH,GAHD;;AAKA,sBACI,QAAC,QAAD;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEf,OAAO,CAACqB,OAAxB;AAAA,6BACI;AAAQ,QAAA,OAAO,EAAEH,oBAAjB;AAAA,4BAA6CH,kBAAkB,GAAG,YAAH,GAAkB,WAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAI,MAAA,SAAS,EAAEf,OAAO,CAACsB,IAAvB;AAAA,gBACKL,YAAY,CAACM,GAAb,CAAkBC,KAAD,iBACd,QAAC,SAAD;AAEI,QAAA,EAAE,EAAEA,KAAK,CAACjB,EAFd;AAGI,QAAA,MAAM,EAAEiB,KAAK,CAACC,MAHlB;AAII,QAAA,IAAI,EAAED,KAAK,CAACE;AAJhB,SACSF,KAAK,CAACjB,EADf;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAhCD;;GAAMC,S;UACcZ,U,EACCC,W;;;KAFfW,S;AAkCN,eAAeA,SAAf","sourcesContent":["import {Fragment} from 'react';\nimport { useHistory, useLocation, useRouteMatch } from \"react-router-dom\";\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n    return quotes.sort((quoteA, quoteB) => {\n        if (ascending) {\n            return quoteA.id > quoteB.id ? 1 : -1;\n        } else {\n            return quoteA.id < quoteB.id ? 1 : -1;\n        }\n    });\n};\n\nconst QuoteList = (props) => {\n    const history = useHistory()\n    const location = useLocation()\n\n    const queryParams = new URLSearchParams(location.search)\n\n    const isSortingAscending = queryParams.get('sort') === 'asc'\n\n    const sortedQuotes = sortQuotes(props.quotes, isSortingAscending)\n\n    const changeSortingHandler = () => {\n        history.push(`${location.pathname}?sort=${isSortingAscending ? 'desc' : 'asc'}`)\n\n    }\n\n    return (\n        <Fragment>\n            <div className={classes.sorting}>\n                <button onClick={changeSortingHandler}>Sort {isSortingAscending ? 'Descending' : 'Ascending'}</button>\n            </div>\n            <ul className={classes.list}>\n                {sortedQuotes.map((quote) => (\n                    <QuoteItem\n                        key={quote.id}\n                        id={quote.id}\n                        author={quote.author}\n                        text={quote.text}\n                    />\n                ))}\n            </ul>\n        </Fragment>\n    );\n};\n\nexport default QuoteList;\n"]},"metadata":{},"sourceType":"module"}