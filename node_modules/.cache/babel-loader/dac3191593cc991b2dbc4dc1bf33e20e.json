{"ast":null,"code":"var _jsxFileName = \"/Users/devinsuttler/Documents/react_udemy_course_again/quote-project/src/components/quotes/QuoteList.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from 'react';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteList = props => {\n  _s();\n\n  const history = useHistory();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n\n  const changeSortingHandler = () => {\n    history.push(`/quotes?sort=asc`);\n    console.log(queryParams);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.sorting,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeSortingHandler,\n        children: \"Sort Ascending\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: props.quotes.map(quote => /*#__PURE__*/_jsxDEV(QuoteItem, {\n        id: quote.id,\n        author: quote.author,\n        text: quote.text\n      }, quote.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuoteList, \"azjqGSEfmvz5+G/YRUZm7OceOpI=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = QuoteList;\nexport default QuoteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteList\");","map":{"version":3,"sources":["/Users/devinsuttler/Documents/react_udemy_course_again/quote-project/src/components/quotes/QuoteList.js"],"names":["Fragment","useHistory","useLocation","QuoteItem","classes","QuoteList","props","history","location","queryParams","URLSearchParams","search","changeSortingHandler","push","console","log","sorting","list","quotes","map","quote","id","author","text"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,kBAAxC;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAMC,OAAO,GAAGN,UAAU,EAA1B;AACA,QAAMO,QAAQ,GAAGN,WAAW,EAA5B;AAEA,QAAMO,WAAW,GAAG,IAAIC,eAAJ,CAAoBF,QAAQ,CAACG,MAA7B,CAApB;;AAEA,QAAMC,oBAAoB,GAAG,MAAM;AAC/BL,IAAAA,OAAO,CAACM,IAAR,CAAc,kBAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;AACH,GAHD;;AAKA,sBACI,QAAC,QAAD;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEL,OAAO,CAACY,OAAxB;AAAA,6BACI;AAAQ,QAAA,OAAO,EAAEJ,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAI,MAAA,SAAS,EAAER,OAAO,CAACa,IAAvB;AAAA,gBACKX,KAAK,CAACY,MAAN,CAAaC,GAAb,CAAkBC,KAAD,iBACd,QAAC,SAAD;AAEI,QAAA,EAAE,EAAEA,KAAK,CAACC,EAFd;AAGI,QAAA,MAAM,EAAED,KAAK,CAACE,MAHlB;AAII,QAAA,IAAI,EAAEF,KAAK,CAACG;AAJhB,SACSH,KAAK,CAACC,EADf;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CA5BD;;GAAMhB,S;UACcJ,U,EACCC,W;;;KAFfG,S;AA8BN,eAAeA,SAAf","sourcesContent":["import {Fragment} from 'react';\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst QuoteList = (props) => {\n    const history = useHistory()\n    const location = useLocation()\n\n    const queryParams = new URLSearchParams(location.search)\n\n    const changeSortingHandler = () => {\n        history.push(`/quotes?sort=asc`)\n        console.log(queryParams)\n    }\n\n    return (\n        <Fragment>\n            <div className={classes.sorting}>\n                <button onClick={changeSortingHandler}>Sort Ascending</button>\n            </div>\n            <ul className={classes.list}>\n                {props.quotes.map((quote) => (\n                    <QuoteItem\n                        key={quote.id}\n                        id={quote.id}\n                        author={quote.author}\n                        text={quote.text}\n                    />\n                ))}\n            </ul>\n        </Fragment>\n    );\n};\n\nexport default QuoteList;\n"]},"metadata":{},"sourceType":"module"}