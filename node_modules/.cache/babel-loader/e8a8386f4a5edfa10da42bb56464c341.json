{"ast":null,"code":"var _jsxFileName = \"/Users/devinsuttler/Documents/react_udemy_course_again/quote-project/src/pages/QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: 'q1',\n  author: 'Devin',\n  text: 'Learning React can be fun!'\n}, {\n  id: 'q2',\n  author: 'Jay',\n  text: 'Learning Linux can be fun!'\n}];\n\nconst QuoteDetail = () => {\n  _s();\n\n  const match = useRouteMatch();\n  const params = useParams();\n  const {\n    quoteId\n  } = params;\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error\n  } = useHttp(getSingleQuote, true); // console.log(match)\n  // const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId)\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No quote found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}`,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'centered',\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: 'btn--flat',\n          to: `${match.url}/comments`,\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(QuoteDetail, \"cv1Iusq+I4KeC6i/PAPIiViCiFg=\", false, function () {\n  return [useRouteMatch, useParams, useHttp];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"sources":["/Users/devinsuttler/Documents/react_udemy_course_again/quote-project/src/pages/QuoteDetail.js"],"names":["useParams","Route","Link","useRouteMatch","Comments","HighlightedQuote","useHttp","getSingleQuote","useEffect","DUMMY_QUOTES","id","author","text","QuoteDetail","match","params","quoteId","sendRequest","status","data","loadedQuote","error","quote","path","url"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,KAAnB,EAA0BC,IAA1B,EAAgCC,aAAhC,QAAoD,kBAApD;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,cAAR,QAA6B,YAA7B;AACA,SAAQC,SAAR,QAAwB,OAAxB;;;AAEA,MAAMC,YAAY,GAAG,CACjB;AAACC,EAAAA,EAAE,EAAE,IAAL;AAAWC,EAAAA,MAAM,EAAE,OAAnB;AAA4BC,EAAAA,IAAI,EAAE;AAAlC,CADiB,EAEjB;AAACF,EAAAA,EAAE,EAAE,IAAL;AAAWC,EAAAA,MAAM,EAAE,KAAnB;AAA0BC,EAAAA,IAAI,EAAE;AAAhC,CAFiB,CAArB;;AAKA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAMC,KAAK,GAAGX,aAAa,EAA3B;AACA,QAAMY,MAAM,GAAGf,SAAS,EAAxB;AAEA,QAAM;AAACgB,IAAAA;AAAD,MAAYD,MAAlB;AAEA,QAAM;AAACE,IAAAA,WAAD;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA,IAAI,EAAEC,WAA5B;AAAyCC,IAAAA;AAAzC,MAAkDf,OAAO,CAACC,cAAD,EAAiB,IAAjB,CAA/D,CANsB,CAQtB;AAEA;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,WAAW,CAACD,OAAD,CAAX;AACH,GAFQ,EAEN,CAACC,WAAD,EAAcD,OAAd,CAFM,CAAT;;AAIA,MAAG,CAACM,KAAJ,EAAW;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI;AAAA,4BACI,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEA,KAAK,CAACV,IAA9B;AAAoC,MAAA,MAAM,EAAEU,KAAK,CAACX;AAAlD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEG,KAAK,CAACS,IAAK,EAA3B;AAA8B,MAAA,KAAK,MAAnC;AAAA,6BACI;AAAK,QAAA,SAAS,EAAE,UAAhB;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,SAAS,EAAE,WAAjB;AAA8B,UAAA,EAAE,EAAG,GAAET,KAAK,CAACU,GAAI,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEV,KAAK,CAACS,IAAK,WAA3B;AAAA,6BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,kBADJ;AAaH,CAjCD;;GAAMV,W;UACYV,a,EACCH,S,EAIyCM,O;;;KANtDO,W;AAmCN,eAAeA,WAAf","sourcesContent":["import {useParams, Route, Link, useRouteMatch} from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport useHttp from \"../hooks/use-http\";\nimport {getSingleQuote} from \"../lib/api\";\nimport {useEffect} from \"react\";\n\nconst DUMMY_QUOTES = [\n    {id: 'q1', author: 'Devin', text: 'Learning React can be fun!'},\n    {id: 'q2', author: 'Jay', text: 'Learning Linux can be fun!'}\n]\n\nconst QuoteDetail = () => {\n    const match = useRouteMatch()\n    const params = useParams();\n\n    const {quoteId} = params\n\n    const {sendRequest, status, data: loadedQuote, error} = useHttp(getSingleQuote, true)\n\n    // console.log(match)\n\n    // const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId)\n\n    useEffect(() => {\n        sendRequest(quoteId)\n    }, [sendRequest, quoteId])\n\n    if(!quote) {\n        return <p>No quote found</p>\n    }\n\n    return (\n        <>\n            <HighlightedQuote text={quote.text} author={quote.author}/>\n            <Route path={`${match.path}`} exact>\n                <div className={'centered'}>\n                    <Link className={'btn--flat'} to={`${match.url}/comments`}>Load Comments</Link>\n                </div>\n            </Route>\n            <Route path={`${match.path}/comments`}>\n                <Comments />\n            </Route>\n        </>\n    )\n}\n\nexport default QuoteDetail;"]},"metadata":{},"sourceType":"module"}